; PlatformIO Project Configuration File
;
; Supported platforms for the MobiFlight firmware are:
; atmega2560
; promicro
; uno
;
; Version numbers for releases are automatically applied by GitHub
; during the release build process based on the tag associated with
; the GitHub release.

; To ensure builds work correctly in GitHub the default_envs
; should always be set to all supported MobiFlight platforms.
; If you want to only build a single platform locally during
; development use VSCode to change the target to a non-default
; by clicking on the target name in the bottom status bar.
[platformio]

; Common build settings across all devices
[env]
lib_deps = 
	https://github.com/MobiFlight/LedControl#1.1.0
	waspinator/AccelStepper @ 1.61
	https://github.com/MobiFlight/LiquidCrystal_I2C#v1.1.4
	https://github.com/MobiFlight/Arduino-CmdMessenger#4.2.1
build_flags =
	-DMF_REDUCE_FUNCT_LEDCONTROL
	-DMAXCALLBACKS=30
	-DSERIAL_RX_BUFFER_SIZE=96
	-DMESSENGERBUFFERSIZE=96
	-DMAXSTREAMBUFFERSIZE=96
	-DDEFAULT_TIMEOUT=5000
;	-DDEBUG2CMDMESSENGER=1
	-I./src/MF_Analog
	-I./src/MF_Button
	-I./src/MF_Encoder
	-I./src/MF_InputShifter
	-I./src/MF_DigInMux
	-I./src/MF_LCDDisplay
	-I./src/MF_Output
	-I./src/MF_OutputShifter
	-I./src/MF_Segment
	-I./src/MF_Servo
	-I./src/MF_Stepper
	-I./src/MF_Modules
src_filter =
	+<*>
extra_scripts =
	pre:get_version.py

; Build settings for the Arduino Mega
[env:mega]
platform = atmelavr
board = megaatmega2560
framework = arduino
build_flags = 
	${env.build_flags}
	-I./_Boards/Atmel/Board_Mega
src_filter = 
	${env.src_filter}
	+<../_Boards/Atmel>
lib_deps = 
	${env.lib_deps}
	arduino-libraries/Servo @ 1.1.8
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}

; Build settings for the Arduino Pro Micro
[env:micro]
platform = atmelavr
board = sparkfun_promicro16
framework = arduino
build_flags = 
	${env.build_flags}
	-I./_Boards/Atmel/Board_ProMicro
src_filter = 
	${env.src_filter}
	+<../_Boards/Atmel>
lib_deps = 
	${env.lib_deps}
	arduino-libraries/Servo @ 1.1.8
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}


; Build settings for the Arduino Uno
[env:uno]
platform = atmelavr
board = uno
framework = arduino
build_flags = 
	${env.build_flags}
	-I./_Boards/Atmel/Board_Uno
src_filter = 
	${env.src_filter}
	+<../_Boards/Atmel>
lib_deps = 
	${env.lib_deps}
	arduino-libraries/Servo @ 1.1.8
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}

[env:mini]
platform = atmelavr
board = pro16MHzatmega328
framework = arduino
build_flags = 
	${env.build_flags}
	-I./_Boards/Atmel/Board_Mini
src_filter = 
	${env.src_filter}
	+<../_Boards/Atmel>
lib_deps = 
	${env.lib_deps}
	arduino-libraries/Servo @ 1.1.8
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}

[env:nano]
platform = atmelavr
;board = nanoatmega328
board = nanoatmega328new
framework = arduino
build_flags = 
	${env.build_flags}
	-I./_Boards/Atmel/Board_Nano
src_filter = 
	${env.src_filter}
	+<../_Boards/Atmel>
lib_deps = 
	${env.lib_deps}
	arduino-libraries/Servo @ 1.1.8
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}

[env:pico]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board = pico
framework = arduino
; select new core
board_build.core = earlephilhower
; configure filesystem size. Default 0 Mbyte.
board_build.filesystem_size = 0M
lib_ldf_mode = chain+
; inject core package.. not yet registered with PlatformIO
; registry, so pull working version directly from git / download page.
; note that download link for toolchain is specific for OS. see https://github.com/earlephilhower/pico-quick-toolchain/releases.
platform_packages = 
    maxgerhardt/framework-arduinopico@https://github.com/maxgerhardt/arduino-pico.git
    maxgerhardt/toolchain-pico@https://github.com/earlephilhower/pico-quick-toolchain/releases/download/1.3.1-a/x86_64-w64-mingw32.arm-none-eabi-7855b0c.210706.zip
;    earlephilhower/framework-arduinopico@https://github.com/earlephilhower/arduino-pico.git
;    earlephilhower/toolchain-pico@https://github.com/earlephilhower/pico-quick-toolchain/releases/download/1.3.1-a/x86_64-w64-mingw32.arm-none-eabi-7855b0c.210706.zip
;upload_protocol = picoprobe
build_flags =
	${env.build_flags}
	-I./_Boards/RaspberryPi/pico
	-fpermissive
build_unflags =
  -Wdeprecated-declarations
;  -Werror=return-type
src_filter =
  ${env.src_filter}
  +<../_Boards/RaspberryPi>
lib_deps =
	${env.lib_deps}

monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}

[env:teensy41]
platform = teensy
board = teensy41
framework = arduino
build_flags =
	-DUSB_SERIAL_HID
	;  -DUSB_SERIAL   ; if HID is not used
	${env.build_flags}
	-I./_Boards/Teensy35_41/Board_Teensy41
src_filter =
  ${env.src_filter}
  +<../_Boards/Teensy35_41>
lib_deps =
 	${env.lib_deps}
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}

[env:teensy35]
platform = teensy
board = teensy35
framework = arduino
build_flags =
	-DUSB_SERIAL_HID
	${env.build_flags}
	-I./_Boards/Teensy35_41/Board_Teensy35
src_filter =
	${env.src_filter}
	+<../_Boards/Teensy35_41>
lib_deps =
 	${env.lib_deps}
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}
